package graficos;

import javax.swing.*;
import java.awt.*;
import java.awt.geom.Ellipse2D;
import java.awt.geom.Line2D;
import java.awt.geom.Rectangle2D;

public class TrabajandoColores {

	public static void main(String[] args) {
		MarcoConColor mimarco = new MarcoConColor();
		mimarco.setVisible(true);
		mimarco.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		
	}

}

class MarcoConColor extends JFrame {
	public MarcoConColor() {
		setTitle("Marco con color");
		setSize(400, 400);
		
		LaminaConFiguras milamina = new LaminaConFiguras();
		add(milamina);
	}
}

class LaminaConFiguras extends JPanel {
	// debemos sobre escribir el metodo
	public void paintComponent(Graphics g) {
		// primero llamamos al metodo paintComponent de la clase padre
		super.paintComponents(g);
		
		// g.drawRect(50, 50, 200, 200);
		// g.drawLine(100, 100, 300, 900);
		// g.drawArc(50, 100, 200, 120, 150, 0);
		
		// hago una refundicion o casteo de Graphics a Graphics
		Graphics2D g2 = (Graphics2D) g;
		g2.addRenderingHints(new RenderingHints(RenderingHints.KEY_ANTIALIASING, RenderingHints.VALUE_ANTIALIAS_ON)); //Antialiasing
		Rectangle2D rectangulo = new Rectangle2D.Double(100, 100, 200, 150);
		// establecer color
		g2.setPaint(Color.CYAN); // color del trazo, de la linea, porque se usa draw
		 //g2.draw(rectangulo);
		g2.fill(rectangulo); // si se usa fill en lugar de draw, entonces rellena con ese color. Comento la elipse porque no se ver√≠a si la dibuja
		
		// elipse
		// Ellipse2D elipse = new Ellipse2D.Double();
		// elipse.setFrame(rectangulo);
		// g2.draw(elipse);
		
	}
}